package webrtc.eval.model;

import java.util.ArrayList;

import com.google.appengine.api.channel.ChannelMessage;
import com.google.appengine.api.channel.ChannelService;
import com.google.appengine.api.channel.ChannelServiceFactory;


public class InterClinicService {

	public void syncNewPatient(String pName, String clinicName){
		/*
		 * TODO: Send sync requests to other clients over Channel API
		 * Get the list of all clients from the clinic
		 * Check that it doesn't contain the newly added patient, then send an update to them
		 */
	}
	
	public String retrievePatient(String ppsn, String clinic, String requestor){
		PeerDataAccess pd = new PeerDataAccess();
		Clinic c = pd.findClinic(clinic);
		if(c == null)
			return "Error: CLINIC NOT FOUND";
		
		PatientDataAccess pda = new PatientDataAccess();
		Patient p = pda.findPatient(ppsn);
		if(p.getClinicID().getId() == c.getClinicID().getId()){
			Client foundClient = null;
			ArrayList<Client> clients = c.getClients();
			boolean found = false;
			for(int i = 0; i < clients.size() && !found; i++){
				foundClient = clients.get(i);
				if(foundClient.isPatientPresent(p.getKey()) && foundClient.isOnline()){
					found = true;
				}
			}
			if(!found){
				return "Error: COULD NOT FIND SUITABLE PEER";
			}
			if(foundClient != null){
				ChannelService channelService = ChannelServiceFactory.getChannelService();
				channelService.sendMessage(new ChannelMessage(Long.toString(foundClient.getcID().getId()), "Request:"+ppsn+":Client:"+requestor));
			}
			return "Info: Attempting contact with suitable peer";
		} else {
			return "Error: CLINIC DOES NOT MATCH";
		}
	}
	
	public String retrievePatient(String ppsn, String requestor){
		PeerDataAccess pd = new PeerDataAccess();
		
		PatientDataAccess pda = new PatientDataAccess();
		Patient p = pda.findPatient(ppsn);
		Clinic c = pd.findClinic(p.getClinicID());
		
		if(c != null){
			Client foundClient = null;
			ArrayList<Client> clients = c.getClients();
			boolean found = false;
			for(int i = 0; i < clients.size() && !found; i++){
				foundClient = clients.get(i);
				if(foundClient.isPatientPresent(p.getKey()) && foundClient.isOnline()){
					found = true;
				}
			}
			if(!found){
				return "Error: COULD NOT FIND SUITABLE PEER";
			}
			if(foundClient != null){
				ChannelService channelService = ChannelServiceFactory.getChannelService();
				channelService.sendMessage(new ChannelMessage(Long.toString(foundClient.getcID().getId()), "Request:"+ppsn+":Client:"+requestor));
			}
			return "Info: Attempting contact with suitable peer";
		} else {
			return "Error: CLINIC NOT FOUND";
		}
	}
}
