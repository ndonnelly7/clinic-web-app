package webrtc.eval.model;

import javax.persistence.EntityManager;
import javax.persistence.EntityManagerFactory;
import javax.persistence.EntityTransaction;

public class PatientDataAccess {

	private String patient_data_key = "Patient_Data_001";
	
	public void init(){
		EntityManagerFactory emf = EMF.get();
		EntityManager em = null;
		AnonPatientData pd = null;
		
		try {
			em = emf.createEntityManager();
			pd = em.find(AnonPatientData.class, patient_data_key);
			
			if(pd == null) {
				pd = new AnonPatientData(patient_data_key);
				em.persist(pd);
			}
		} finally {
			if(em != null)
				em.close();
		}
	}
	
	public boolean addClinic(Clinic p) {
		boolean result  = false;
		
		EntityManagerFactory emf = EMF.get();
		EntityManager em = null;
		EntityTransaction txn = null;
		AnonPatientData pd = null;
		
		try {
			em = emf.createEntityManager();
			txn = em.getTransaction();
			txn.begin();
			pd = em.find(AnonPatientData.class, peer_data_key);
			
			if(pd != null) {
				result = pd.addClinic(p);
				txn.commit();
			}
		} finally {
			if(txn != null) {
				if(txn.isActive()) {
					txn.rollback();
				}
			}
			
			if(em != null)
				em.close();
		}
		
		return result;
	}
	
	public boolean removeClinic(Clinic p) {
		boolean result  = false;
		
		EntityManagerFactory emf = EMF.get();
		EntityManager em = null;
		EntityTransaction txn = null;
		AnonPatientData pd = null;
		
		try {
			em = emf.createEntityManager();
			txn = em.getTransaction();
			txn.begin();
			pd = em.find(AnonPatientData.class, peer_data_key);
			
			if(pd != null) {
				result = pd.removeClinic(p);
				txn.commit();
			}
		} finally {
			if(txn != null) {
				if(txn.isActive()) {
					txn.rollback();
				}
			}
			
			if(em != null)
				em.close();
		}
		
		return result;
	}
}
